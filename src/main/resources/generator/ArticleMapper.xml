<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lfq.generate.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.lfq.generate.Article">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="authority" jdbcType="INTEGER" property="authority" />
    <result column="statu" jdbcType="INTEGER" property="statu" />
    <result column="views" jdbcType="BIGINT" property="views" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
  </resultMap>
  <sql id="Base_Column_List">
    id, author, createtime, title, body, authority, statu, views, like_count, icon
  </sql>
  <sql id="Base_Column_List2">
    article.id, article.author, article.createtime, article.title,
    article.authority, article.statu, article.views,
    article.like_count, article.icon
,`user`.name
  </sql>
  <sql id="SelectFromSortUser">
    article.id,
	article.author,
	article.createtime,
	article.title,
	article.authority,
	article.statu,
	article.views,
	article.like_count,
	article.icon,
	`user`.`name`,
	sort_article.sort_id,
	sort_article.art_id,
	sort.`name` sortName,
    sort.id sortId
  </sql>
  <resultMap id="BaseResultMap2" type="com.lfq.generate.Article">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="authority" jdbcType="INTEGER" property="authority" />
    <result column="statu" jdbcType="INTEGER" property="statu" />
    <result column="views" jdbcType="BIGINT" property="views" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <association property="user" javaType="com.lfq.generate.User">
      <result column="name" property="name"/>
    </association>
  </resultMap>
  <resultMap id="BaseResultMap3" type="com.lfq.generate.Article">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="authority" jdbcType="INTEGER" property="authority" />
    <result column="statu" jdbcType="INTEGER" property="statu" />
    <result column="views" jdbcType="BIGINT" property="views" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <association property="user" javaType="com.lfq.generate.User">
      <result column="name" property="name"/>
    </association>
    <association property="sortArticle" javaType="com.lfq.generate.SortArticle">
      <association property="sort" javaType="com.lfq.generate.Sort">
        <result column="sortId" property="id"/>
        <result column="sortName" property="name"/>
      </association>
    </association>
  </resultMap>
  <sql id="selectByPrimaryKeyAndUser">
    article.id, article.author, article.createtime, article.title, article.body,
    article.authority, article.statu, article.views, article.like_count, article.icon
    ,`user`.`name`
  </sql>
  <resultMap id="selectByPrimaryKeyAndUserMap" type="com.lfq.generate.Article">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="authority" jdbcType="INTEGER" property="authority" />
    <result column="statu" jdbcType="INTEGER" property="statu" />
    <result column="views" jdbcType="BIGINT" property="views" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <association property="user" javaType="com.lfq.generate.User">
      <result column="name" property="name"/>
    </association>
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="selectByPrimaryKeyAndUserMap">
    select
    <include refid="selectByPrimaryKeyAndUser" />
    from article,`user`
    where article.id = #{id,jdbcType=VARCHAR}
    and `user`.id=article.author
  </select>
    <select id="selectPageArticle" resultMap="BaseResultMap2">
        select
    <include refid="Base_Column_List"/>
      from article,`user`
        where `user`.id=article.author
      ORDER BY article.createtime desc
        limit #{begin},#{size}
    </select>
  <select id="countArticle" resultType="java.lang.Integer">
    select
        count(*)
    from article
  </select>
  <select id="selectPageArticle2" resultMap="BaseResultMap3">
    select
    <include refid="SelectFromSortUser"/>
    FROM
    article
    LEFT  JOIN `user` ON `user`.id = article.author
    LEFT   JOIN sort_article ON sort_article.art_id = article.id
    LEFT  JOIN sort ON sort_article.sort_id = sort.id
    <if test="sort!='' and sort!=null">
      where sort.id=#{sort}
    </if>
    ORDER BY article.createtime desc
    limit #{begin},#{size}
  </select>
  <sql id="selectArticleByUserSql">
    article.id,
	article.title,
    article.createtime,
    article.icon

  </sql>
  <select id="selectArticleByUser" resultType="com.lfq.generate.Article">
    select
    <include refid="selectArticleByUserSql"/>
    from
    article ,`user`
    where article.author=`user`.id
    and article.id!=#{id}
    and `user`.id=#{userId}
    limit 0,5
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from article
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lfq.generate.Article" useGeneratedKeys="true">
    insert into article (author, createtime, title, 
      body, authority, statu, 
      views, like_count, icon
      )
    values (#{author,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE}, #{title,jdbcType=VARCHAR}, 
      #{body,jdbcType=VARCHAR}, #{authority,jdbcType=INTEGER}, #{statu,jdbcType=INTEGER}, 
      #{views,jdbcType=BIGINT}, #{likeCount,jdbcType=BIGINT}, #{icon,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective"  parameterType="com.lfq.generate.Article"
         keyProperty="id" >
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select UUID()
    </selectKey>
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
        id,
        <if test="author != null">
        author,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="authority != null">
        authority,
      </if>
      <if test="statu != null">
        statu,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="icon != null">
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id},
        <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="authority != null">
        #{authority,jdbcType=INTEGER},
      </if>
      <if test="statu != null">
        #{statu,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        #{views,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=BIGINT},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>

  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lfq.generate.Article">
    update article
    <set>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="authority != null">
        authority = #{authority,jdbcType=INTEGER},
      </if>
      <if test="statu != null">
        statu = #{statu,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=BIGINT},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lfq.generate.Article">
    update article
    set author = #{author,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      authority = #{authority,jdbcType=INTEGER},
      statu = #{statu,jdbcType=INTEGER},
      views = #{views,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=BIGINT},
      icon = #{icon,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>